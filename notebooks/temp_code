###
Number of entries in Drug.Class
---
unique(rg_df_notLoose$Drug.Class)

###
Number of entries per AB group
---
ab_counts_vec <- sapply(ab_groups, function (x){
  filter(rg_df_notLoose, grepl(x, Drug.Class, ignore.case = TRUE)) %>% nrow()
})

ab_counts_df <- data.frame("count" = ab_counts_vec, "AB.group" = names(ab_counts_vec))
rownames(ab_counts_df) <- NULL

ab_counts_df
ab_found <- names(ab_counts_vec[ab_counts_vec != 0])

#### PLOTS #####
Repeat counts per AB group
---
rg_ab_found_df <- add_rgi_to_ab(ab_found, rg_df_notLoose)
counts_per_ab <- join_RGI_repeatCounts(rg_ab_found_df, rg_df_notLoose, repeat_counts_gene_sample)
ggbox.rep.n.ab <- ggplot(count_per_ab, aes(strain.x, n_repeats)) +
  geom_boxplot(aes(fill=AB.group), outlier.alpha = 0.5, outlier.size = 0.5)+
  coord_trans(y="sqrt") +
  scale_fill_brewer(palette="Set2", name="AB\ngroups") +
  theme(axis.text.x = element_text(angle=90), legend.position = "top")+
  xlab("") +
  ylab("n") +
  ggtitle("Repeat counts")

ggbox.rep.n.ab

###
AR length by AB group
---
repeat_df$record_id <- sub("_gene", "", repeat_df$record_id)
# join
repeat_df_center_ab_ar <- left_join(rg_ab_found_df, repeat_df %>% filter(spans_center == "yes"), by="record_id") %>% filter(!is.na(Drug.Class) & !is.na(spans_center))
ggbox.ar.ab <- ggplot(repeat_df_center_ab_ar, aes(strain.x, AR_length)) +
  geom_boxplot(aes(fill=AB.group), outlier.alpha = 0.5, outlier.size = 0.5)+
  scale_fill_brewer(palette="Set2", name="AB\ngroups") +
  theme(axis.text.x = element_text(angle=90), legend.position = "top")+
  xlab("") +
  ylab("n") +
  ggtitle("AR size variation")

ggbox.ar.ab

###
Repeat lengths variation by AB group
---

ggbox.rl.ab <- ggplot(repeat_df_center_ab_ar, aes(strain.x, length)) +
  geom_boxplot(aes(fill=AB.group), outlier.alpha = 0.5, outlier.size = 0.5)+
  coord_trans(y="log") +
  scale_fill_brewer(palette="Set2", name="AB\ngroups") +
  theme(axis.text.x = element_text(angle=90), legend.position = "top")+
  xlab("") +
  ylab("n") +
  ggtitle("Repeat size variation")

ggbox.rl.ab